/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FilePaths } from './FilePaths';
import {
    FilePathsFromJSON,
    FilePathsFromJSONTyped,
    FilePathsToJSON,
} from './FilePaths';

/**
 * 
 * @export
 * @interface WsData
 */
export interface WsData {
    /**
     * 
     * @type {string}
     * @memberof WsData
     */
    action: string;
    /**
     * 
     * @type {FilePaths}
     * @memberof WsData
     */
    filePaths: FilePaths;
    /**
     * 
     * @type {number}
     * @memberof WsData
     */
    fs: number;
    /**
     * 
     * @type {number}
     * @memberof WsData
     */
    fw1: number;
    /**
     * 
     * @type {number}
     * @memberof WsData
     */
    fw2: number;
}

/**
 * Check if a given object implements the WsData interface.
 */
export function instanceOfWsData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "action" in value;
    isInstance = isInstance && "filePaths" in value;
    isInstance = isInstance && "fs" in value;
    isInstance = isInstance && "fw1" in value;
    isInstance = isInstance && "fw2" in value;

    return isInstance;
}

export function WsDataFromJSON(json: any): WsData {
    return WsDataFromJSONTyped(json, false);
}

export function WsDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): WsData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'action': json['action'],
        'filePaths': FilePathsFromJSON(json['file_paths']),
        'fs': json['fs'],
        'fw1': json['fw1'],
        'fw2': json['fw2'],
    };
}

export function WsDataToJSON(value?: WsData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'action': value.action,
        'file_paths': FilePathsToJSON(value.filePaths),
        'fs': value.fs,
        'fw1': value.fw1,
        'fw2': value.fw2,
    };
}

